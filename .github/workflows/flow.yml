name: Flow

on:
  push:
    branches: [ master ]
    tags: [ v* ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: lein deps
    - name: Run tests
      run: lein test
  clojars_push:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: lein deps
    - name: Release Clojars
      env:
        CLOJARS_USER: ${{ secrets.CLOJARS_USER }}
        CLOJARS_PASS: ${{ secrets.CLOJARS_PASS }}
      run: lein deploy snapshots || echo skipping
  docker_push:
    needs: clojars_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env vars
        run: |
          IMAGE_ID=ghcr.io/erdos/stencil

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo TAG=$IMAGE_ID:$VERSION >> $GITHUB_ENV
      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build image
        working-directory: service
        run: docker build . --file Dockerfile --tag stencil
      - name: Push image to GitHub Container Registry
        run: |
          docker tag stencil ${{ env.TAG }}
          docker push ${{ env.TAG }}
      - name: Build GraalVM image
        working-directory: service
        run: docker build . --file Dockerfile.graalvm --tag stencil-graalvm
      - name: Push GraalVM image to GitHub Container Registry
        run: |
          docker tag stencil-graalvm ${{ env.TAG }}-graal
          docker push ${{ env.TAG }}-graal
